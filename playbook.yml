---
- hosts: all
  become: true
  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - nginx-full
          - git
          - wget
          - certbot
          - python3-simplejson
          - awscli
          - jq
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install Docker Compose
      ansible.builtin.shell:
        cmd: |
          curl -L "https://github.com/docker/compose/releases/download/v2.11.0/docker-compose-linux-$(uname -m)" -o /usr/bin/docker-compose
          chmod +x /usr/bin/docker-compose

    - name: Start NGINX
      service:
        name: nginx
        state: started

    - name: Create letsencrypt Directory
      file:
        name: /var/www/letsencrypt
        state: directory

    - name: Remove Default NGINX Config
      file:
        name: /etc/nginx/sites-enabled/default
        state: absent

    - name: Install NGINX Config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Setup NGINX for letsencrypt Requests
      template:
        src: templates/nginx-http.j2
        dest: /etc/nginx/sites-enabled/http

    - name: Restart NGINX for letsencrypt Requests
      service:
        name: nginx
        state: restarted

    - name: Create letsencrypt Certificate
      shell: certbot certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
      args:
        creates: /etc/letsencrypt/live/{{ domain_name }}

    - name: Generate dhparams for NGINX
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
      args:
        creates: /etc/nginx/dhparams.pem

    - name: Install NGINX Site
      template:
        src: templates/nginx-taiga.j2
        dest: /etc/nginx/sites-enabled/taiga

    - name: Restart NGINX
      service:
        name: nginx
        state: restarted

    - name: Schedule letsencrypt Renewal Job
      cron:
        name: letsencrypt_renewal
        special_time: weekly
        job: certbot --renew-by-default certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload

    - name: Clone Taiga Repository
      ansible.builtin.git:
        repo: https://github.com/Jhatkaa/taiga-docker.git
        dest: /home/ubuntu/taiga-docker/
        single_branch: yes
        version: deploy/jhatkaa

    - name: Install ec2-metadata
      ansible.builtin.shell:
        cmd: |
          curl -L "http://s3.amazonaws.com/ec2metadata/ec2-metadata" -o /usr/bin/ec2-metadata
          chmod u+x /usr/bin/ec2-metadata
